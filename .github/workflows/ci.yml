name: CI

on:
  push:
    branches: [ main, improvements ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # ADD THESE LINES HERE
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsystemd-dev pkg-config
    # THEN CONTINUE AS NORMAL
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-benchmark hypothesis
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Mock hardware dependencies
      run: |
        mkdir -p mock_modules
        echo "class GPIO: pass" > mock_modules/RPi.py
        echo "def setmode(*args): pass" >> mock_modules/RPi.py
        echo "def setup(*args): pass" >> mock_modules/RPi.py
        echo "def output(*args): pass" >> mock_modules/RPi.py
        echo "def cleanup(*args): pass" >> mock_modules/RPi.py
        echo "def input(*args): return 0" >> mock_modules/RPi.py
        echo "class SMBus: pass" > mock_modules/smbus2.py
        echo "class Serial: pass" > mock_modules/serial.py
        echo "class PiCamera2: pass" > mock_modules/picamera2.py
        echo "PYTHONPATH=$PYTHONPATH:$(pwd)/mock_modules" >> $GITHUB_ENV
    - name: Run unit tests
      run: |
        pytest tests/unit -v
    - name: Run simulation tests
      run: |
        pytest tests/simulation -v
    - name: Run navigation tests
      run: |
        pytest tests/navigation -v
    - name: Run obstacle detection tests
      run: |
        pytest tests/obstacle_detection -v
    - name: Run integration tests
      run: |
        pytest tests/integration -v
    - name: Run regression tests
      run: |
        pytest tests/regression -v
    - name: Run benchmarks
      run: |
        pytest tests/benchmarks -v
    - name: Run tests with coverage
      run: |
        pytest --cov=src/mower --cov-report=xml --cov-report=html
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  integration:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Mock hardware dependencies
      run: |
        mkdir -p mock_modules
        echo "class GPIO: pass" > mock_modules/RPi.py
        echo "def setmode(*args): pass" >> mock_modules/RPi.py
        echo "def setup(*args): pass" >> mock_modules/RPi.py
        echo "def output(*args): pass" >> mock_modules/RPi.py
        echo "def cleanup(*args): pass" >> mock_modules/RPi.py
        echo "def input(*args): return 0" >> mock_modules/RPi.py
        echo "class SMBus: pass" > mock_modules/smbus2.py
        echo "class Serial: pass" > mock_modules/serial.py
        echo "class PiCamera2: pass" > mock_modules/picamera2.py
        echo "PYTHONPATH=$PYTHONPATH:$(pwd)/mock_modules" >> $GITHUB_ENV
    - name: Run integration tests and service startup
      run: |
        pytest tests/integration -v
        pytest tests/integration/test_service_startup.py -v
