[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autonomous_mower"
version = "0.1.0"
description = "An autonomous lawn mower control system"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Robotics",
]

dependencies = [
    "flask>=3.0.0",
    "flask-socketio>=5.1.0",
    "geopy>=2.1.0",
    "imutils>=0.5.4",
    "networkx>=2.6.0",
    "opencv-python-headless>=4.8.1.78",
    "pathfinding>=1.0.0",
    "pillow>=10.3.0",
    "pyserial>=3.5",
    "python-dotenv>=1.0.0",
    "rtree>=1.0.0",
    "shapely>=2.0.0",
    "tensorflow>=2.13.0",
    "numpy>=1.22.0",
    "colorama>=0.4.4",
    "watchdog>=5.0.0",
]

[project.optional-dependencies]
coral = [
    "pycoral>=0.2.0,<0.3.0",
    "tflite-runtime>=2.5.0",
]
ddns = [
    "requests>=2.26.0",
    "schedule>=1.1.0",
]
cloudflare = [
    "cloudflare>=2.8.0",
    "cryptography>=3.4.0",
]
ssl = [
    "certbot>=1.12.0",
    "cryptography>=3.4.0",
]
dev = [
    "pytest>=6.2.0",
    "black>=24.3.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.1",
    "pytest-asyncio>=0.15.1",
    "pytest-timeout>=1.4.2",
    "pytest-xdist>=2.4.0",
    "coverage>=6.0",
    "tox>=3.24.0",
    "sphinx>=4.2.0",
    "sphinx-rtd-theme>=0.5.2",
    "pre-commit>=2.15.0",
]

[project.scripts]
mower = "mower.main_controller:main"
mower-test = "mower.diagnostics.hardware_test:main"
mower-calibrate = "mower.diagnostics.imu_calibration:main"
mower-logs = "mower.utilities.logging_config:view_logs" 

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", ".git", ".tox", "build", "dist"]
skips = ["B101", "B104", "B311"]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip_glob = ["venv/*", ".venv/*", ".git/*", ".tox/*", "build/*", "dist/*"]
